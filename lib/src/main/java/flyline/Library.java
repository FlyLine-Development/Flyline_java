/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package flyline;

import okhttp3.*;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Map;
import java.util.stream.Collectors;

public class Library {
    public Response getSeatList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/seats/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getLayoutList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/layouts/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getFoodList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/foods/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getBeverageList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/beverages/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getEntertainmentList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/entertainments/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getWifiList (String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/wifis/")
                .method("GET", null)
                .addHeader("Authorization", "FToken "+f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getPowerList (String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/powers/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAircraftList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/aircraft/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirCraftByIataCode(String f_token, String aircreaftIataCode) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/aircraft/"+aircreaftIataCode+"/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirlineList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/airlines/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirlineByIataCode(String f_token, String airlineIataCode) throws IOException{
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/airlines/"+airlineIataCode+"/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirportList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/airports/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirportByIataCode(String f_token, String airportIataCode) throws IOException{
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/airports/"+airportIataCode+"/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirportByCity(String f_token, String airportCity) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/cities/"+airportCity+"/airports/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getCityList(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/cities/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getCityByIataCode(String f_token, String cityIataCode) throws IOException{
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/cities/"+cityIataCode+"/")
                .method("GET", null)
                .addHeader("Authorization", "FToken "+ f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getCabinMapping(String f_token) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/cabin-booking/")
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getCabinMappingWithParams(String f_token, Map<String, String> paramsObj) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        String base_url = "https://api.flyline.io/api/cabin-booking/";
        String encodedURL = paramsObj.keySet().stream()
                .map(key -> {
                    try {
                        return key + "=" + encodeValue(paramsObj.get(key));
                    } catch (UnsupportedEncodingException e) {
                        e.printStackTrace();
                    }
                    return base_url;
                })
                .collect(Collectors.joining("&", base_url, ""));

        Request request = new Request.Builder()
                .url(encodedURL)
                .method("GET", null)
                .addHeader("Authorization", "FToken " + f_token)
                .build();

        return client.newCall(request).execute();
    }

    public Response getSeatMap(String f_token, String paramsJsonStr) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        MediaType mediaType = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(mediaType, paramsJsonStr);
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/seat-maps/")
                .method("POST", body)
                .addHeader("Content-Type", "application/json")
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirAttributeWithParams(String f_token, String paramsJsonStr) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        MediaType mediaType = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(mediaType, paramsJsonStr);
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/search/amenities/")
                .method("POST", body)
                .addHeader("Authorization", "FToken " + f_token)
                .addHeader("Content-Type", "application/json")
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirAttributeByRoute(String f_token, String paramsJsonStr) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        MediaType mediaType = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(mediaType, paramsJsonStr);
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/amenities/search/route/")
                .method("POST", body)
                .addHeader("Authorization", "FToken " + f_token)
                .addHeader("Content-Type", "application/json")
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirfareWithParams(String f_token, String paramsJsonStr) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        MediaType mediaType = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(mediaType, paramsJsonStr);
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/flights/shop/?")
                .method("POST", body)
                .addHeader("Authorization", "FToken " + f_token)
                .addHeader("Content-Type", "application/json")
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirScheduleWithParam(String f_token, String paramsJsonStr) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        MediaType mediaType = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(mediaType, paramsJsonStr);
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/schedule-flight/")
                .method("POST", body)
                .addHeader("Content-Type", "application/json")
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return client.newCall(request).execute();
    }

    public Response getAirScheduleByRoute(String f_token, String paramsJsonStr) throws IOException {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        MediaType mediaType = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(mediaType, paramsJsonStr);
        Request request = new Request.Builder()
                .url("https://api.flyline.io/api/schedule/")
                .method("POST", body)
                .addHeader("Content-Type", "application/json")
                .addHeader("Authorization", "FToken " + f_token)
                .build();
        return  client.newCall(request).execute();
    }
    private String encodeValue(String value) throws UnsupportedEncodingException {
        return URLEncoder.encode(value, StandardCharsets.UTF_8.toString());
    }
}
